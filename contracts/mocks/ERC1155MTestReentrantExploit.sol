//SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import "../nft/erc1155m/ERC1155M.sol";
import "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol";

contract ERC1155MTestReentrantExploit {
    address private _targetContract;

    constructor(address target) {
        _targetContract = target;
    }

    function exploit(
        uint256 tokenId,
        uint32 qty,
        bytes32[] calldata proof
    ) public payable {
        ERC1155M(_targetContract).mint{value: msg.value}(
            tokenId,
            qty,
            proof,
            0,
            bytes("0")
        );
    }

    function onERC1155Received(
        address,
        address,
        uint256,
        uint256,
        bytes calldata
    ) public payable returns (bytes4) {
        bytes32[] memory proof;
        ERC1155M(_targetContract).mint{value: msg.value}(
            0,
            1,
            proof,
            0,
            bytes("0")
        );
        return IERC1155Receiver.onERC1155Received.selector;
    }
}
